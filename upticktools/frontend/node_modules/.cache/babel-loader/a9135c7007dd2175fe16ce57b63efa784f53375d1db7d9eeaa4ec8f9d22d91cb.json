{"ast":null,"code":"var _jsxFileName = \"/Users/austinrakowski/Desktop/Uptick-Implementation-Tools/upticktools/frontend/src/components/SignUpForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpForm = ({\n  onSignUpSuccess\n}) => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [company, setCompany] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const placeholders = {\n    'First Name': 'Enter your first name',\n    'Last Name': 'Enter your last name',\n    'Email': 'Enter your email',\n    'Company': 'Enter your company name',\n    'Password': 'Enter your password',\n    'Confirm Password': 'Confirm your password'\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrorMessage('');\n\n    // Validate all fields are filled\n    if (!firstName || !lastName || !email || !company || !password || !confirmPassword) {\n      setErrorMessage('All fields are required.');\n      return;\n    }\n\n    // Validate password match\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match.');\n      return;\n    }\n\n    // Proceed with form submission (e.g., API call)\n    console.log('Form submitted:', {\n      firstName,\n      lastName,\n      email,\n      company,\n      password\n    });\n\n    // Call the success handler\n    onSignUpSuccess();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"grid grid-cols-2 gap-x-8 gap-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"col-span-2 text-white font-montserrat text-2xl mb-6 text-center\",\n      children: \"Create Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), ['First Name', 'Last Name', 'Email', 'Company', 'Password', 'Confirm Password'].map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-white font-montserrat mb-2\",\n        children: field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: field.includes('Password') ? 'password' : 'text',\n        placeholder: placeholders[field],\n        value: field === 'Password' ? password : field === 'Confirm Password' ? confirmPassword : field === 'First Name' ? firstName : field === 'Last Name' ? lastName : email,\n        onChange: e => {\n          if (field === 'First Name') setFirstName(e.target.value);else if (field === 'Last Name') setLastName(e.target.value);else if (field === 'Email') setEmail(e.target.value);else if (field === 'Company') setCompany(e.target.value);else if (field === 'Password') setPassword(e.target.value);else if (field === 'Confirm Password') setConfirmPassword(e.target.value);\n        },\n        required: true // Make this field required\n        ,\n        className: \"w-full p-3 rounded-md bg-[#150824] border border-[#a8acb3] text-white focus:outline-none focus:ring-2 focus:ring-[#ff5002]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-2 text-red-500 text-center mb-4\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"col-span-2 bg-[#ff5002] text-white font-montserrat font-bold px-4 py-2 rounded-md hover:bg-[#ff6f00] transition\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUpForm, \"ZQSMvXm8BhVY3cYVuC7NmbV0mRc=\");\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignUpForm","onSignUpSuccess","_s","firstName","setFirstName","lastName","setLastName","email","setEmail","company","setCompany","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","placeholders","handleSubmit","event","preventDefault","console","log","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","field","index","type","includes","placeholder","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/Users/austinrakowski/Desktop/Uptick-Implementation-Tools/upticktools/frontend/src/components/SignUpForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SignUpForm = ({ onSignUpSuccess }) => {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [company, setCompany] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const placeholders = {\n        'First Name': 'Enter your first name',\n        'Last Name': 'Enter your last name',\n        'Email': 'Enter your email',\n        'Company': 'Enter your company name',\n        'Password': 'Enter your password',\n        'Confirm Password': 'Confirm your password'\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setErrorMessage('');\n\n        // Validate all fields are filled\n        if (!firstName || !lastName || !email || !company || !password || !confirmPassword) {\n            setErrorMessage('All fields are required.');\n            return;\n        }\n\n        // Validate password match\n        if (password !== confirmPassword) {\n            setErrorMessage('Passwords do not match.');\n            return;\n        }\n\n        // Proceed with form submission (e.g., API call)\n        console.log('Form submitted:', { firstName, lastName, email, company, password });\n        \n        // Call the success handler\n        onSignUpSuccess();\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className=\"grid grid-cols-2 gap-x-8 gap-y-4\">\n            <h2 className=\"col-span-2 text-white font-montserrat text-2xl mb-6 text-center\">\n                Create Your Account\n            </h2>\n\n            {/* Input fields */}\n            {['First Name', 'Last Name', 'Email', 'Company', 'Password', 'Confirm Password'].map((field, index) => (\n                <div className=\"mb-4\" key={index}>\n                    <label className=\"block text-white font-montserrat mb-2\">{field}</label>\n                    <input\n                        type={field.includes('Password') ? 'password' : 'text'}\n                        placeholder={placeholders[field]}\n                        value={field === 'Password' ? password : field === 'Confirm Password' ? confirmPassword : field === 'First Name' ? firstName : field === 'Last Name' ? lastName : email}\n                        onChange={e => {\n                            if (field === 'First Name') setFirstName(e.target.value);\n                            else if (field === 'Last Name') setLastName(e.target.value);\n                            else if (field === 'Email') setEmail(e.target.value);\n                            else if (field === 'Company') setCompany(e.target.value);\n                            else if (field === 'Password') setPassword(e.target.value);\n                            else if (field === 'Confirm Password') setConfirmPassword(e.target.value);\n                        }}\n                        required // Make this field required\n                        className=\"w-full p-3 rounded-md bg-[#150824] border border-[#a8acb3] text-white focus:outline-none focus:ring-2 focus:ring-[#ff5002]\"\n                    />\n                </div>\n            ))}\n\n            {/* Error Message */}\n            {errorMessage && <div className=\"col-span-2 text-red-500 text-center mb-4\">{errorMessage}</div>}\n\n            {/* Sign Up Button */}\n            <button\n                type=\"submit\"\n                className=\"col-span-2 bg-[#ff5002] text-white font-montserrat font-bold px-4 py-2 rounded-md hover:bg-[#ff6f00] transition\"\n            >\n                Sign Up\n            </button>\n        </form>\n    );\n}\n\nexport default SignUpForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}